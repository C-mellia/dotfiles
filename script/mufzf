#!/bin/bash

# `if else fi` indentation in vim is cursed

[[ -z $session_path ]] && session_path="$HOME/.local/state/mufzf/session"

# -i: increament to existing session

increament=

while getopts "i" opt; do
    case $opt in
        i)
            increament=1
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
    esac
done
shift $((OPTIND - 1))

workspace=${1:-$(i3-msg -t get_workspaces | jq -r '.[] | select(.focused==true).name')}
! [[ -d $(dirname "$session_path") ]] && mkdir -p "$(dirname "$session_path")"

[[ -t 0 ]] || read -r -d '' select
[[ -t 0 ]] && select=$(find . -maxdepth 1 -not -path '*/.*' -type f -exec basename {} \;\
    | grep -E "\.pdf$|\.epub$"\
    | fzf -m --cycle\
    --bind ctrl-l:toggle\
    --bind ctrl-h:cancel\
)

[[ -z $increament ]] && : > "$session_path"

[[ -z $select ]] && exit 1

i3-msg "workspace $workspace" > /dev/null || {
    echo "Failed to swap to workspace $workspace" >&2 && exit 1
}

while read -r file; do
    [[ -r $file ]] || continue

    nohup zathura "$file"\
        &> /dev/null & disown || {
        echo "Failed to open '$file'" && continue
    }

    [[ -t 1 ]] && echo "$PWD/$file" >> "$session_path"
    [[ -t 1 ]] || echo "$PWD/$file"

done <<< "$select"

exit 0
