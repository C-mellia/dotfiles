#!/bin/bash

template=/usr/share/projnew/template
show_info=false # -i
recipe= # <cmd> [<option>] <recipe>
pager=$(which glow) || pager=less
only_list=false

while getopts "hil" opt; do
    case $opt in
        h)
            echo "copy files from templates and execute custom script to setup a project"
            echo "-h: show this help"
            echo "-i: show recipe info if available"
            echo "-l: list available recipes"
            exit 0
            ;;
        i)
            show_info=true; recipe=$OPTARG
            ;;
        l)
            only_list=true # list available recipes
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2; exit 1
            ;;
    esac
done
shift $((OPTIND - 1))

recipe=${1:-c}

[[ -d $template/$recipe ]] || { echo "Recipe $recipe not found"; exit 1; }

if $only_list; then
    echo "Available recipes:"
    for list_recipe in "$template"/*; do
        printf "\t%s\n" "$list_recipe"
    done
    exit 0
elif $show_info; then
    if [[ -f $template/$recipe/.info ]]; then
        printf "recipe \'%s\':\n" "$recipe" && $pager $template/"$recipe"/.info && exit 0
    else
        printf "No available info regarding recipe \'%s\'\n" "$recipe" && exit 1
    fi
fi

echo "Copying template files..."
while read -r file; do
    fname=${file#"$template"/"$recipe"/}
    if [[ $fname == .info ]]; then
        continue
    elif [[ $fname == .exec ]]; then
        echo "Custom script found, executing..."
        eval . "$template/$recipe/.exec" || {
            echo "errors occurred during execution of the custom script" && exit 1
        }
    else
        # echo $fname
        [[ -d $(dirname "$fname") ]] || mkdir -p "$(dirname "$fname")"
        [[ -f $file ]] && cp --update --preserve=links "$file" "$fname"
    fi
done <<< "$(find -L $template/"$recipe"/ -type f)"

echo "Project setup completed"
