#!/bin/bash

BUILD_SRC=$HOME/dotfiles/script/src/buildc.sh
MAINC_SRC=$HOME/dotfiles/script/src/main.c
HELP_MSG="Usage: cnew [options]
    Options:
    -o: Override existing build.sh file
    --shell-only: Only create build.sh file
    -h, --help: Show this message"

while [ true ]; do
    if [[ $# -eq 0 ]]; then
        break
    fi
    case $1 in
        -o) SHOULD_OVERRIDE=True;;
        --shell-only) NOMAINC=True;;
		--simple-sh) SIMPLESH=True;;
        -h|--help) echo $HELP_MSG; exit 0;;
        *) echo "Invalid option: $1"; echo $HELP_MSG; exit 1;;
    esac
    shift 1
done

if [[ ! -f build.sh ]] || [[ $SHOULD_OVERRIDE ]]; then
    if [[ -f build.sh ]]; then
        echo "Overriding existing build.sh file"
    fi

    if [[ -f $BUILD_SRC ]] && [[ ! $SIMPLESH -eq True ]]; then
        cat $BUILD_SRC > build.sh
    else
		echo "Generating simple version of build.sh"
        echo "#!/bin/bash
CC=gcc
CC_FLAG='-Wall -Wextra -std=gnu11'
FD_FLAG=''
\$CC -o main src/main.c \$CC_FLAG \$FD_FLAG" > build.sh
    fi
    chmod +x build.sh
else
    echo "nothing to do with build.sh"
fi

if [[ $NOMAINC ]]; then
    exit 0
fi

if [[ ! -d src ]]; then
    mkdir src
fi

cd src

if [[ ! -f main.c ]] || [[ $SHOULD_OVERRIDE ]]; then
    if [[ -f main.c ]]; then
        echo "Overriding existing main.c file"
    fi

    if [[ -f $MAINC_SRC ]]; then
        cat $MAINC_SRC > main.c
    else
        echo '#include <stdio.h>

int main(void) {
    printf("Hello, world\n");
    return 0;
}' > main.c
    fi
else
    echo "nothing to do with main.c"
fi
